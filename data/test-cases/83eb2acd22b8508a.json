{"uid":"83eb2acd22b8508a","name":"test_get_method_posts_amount","fullName":"tests.test_get_method#test_get_method_posts_amount","historyId":"d467c879375338bd89dc274d43a600bc","time":{"start":1728984236303,"stop":1728984236303,"duration":0},"description":"Checks that posts amount is the same as the total_posts","descriptionHtml":"<p>Checks that posts amount is the same as the total_posts</p>\n","status":"failed","statusMessage":"AssertionError: assert 100 == 15\n +  where 100 = len([{'body': 'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas tota...tate dolores velit et doloremque molestiae', 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'userId': 1}, ...])\n +    where [{'body': 'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas tota...tate dolores velit et doloremque molestiae', 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'userId': 1}, ...] = json()\n +      where json = <Response [200]>.json\n +  and   15 = int('15')","statusTrace":"base_response = <Response [200]>, total_posts = '15'\n\n    def test_get_method_posts_amount(base_response, total_posts):\n        \"\"\"Checks that posts amount is the same as the total_posts\"\"\"\n>       assert len(base_response.json()) == int(total_posts)\nE       AssertionError: assert 100 == 15\nE        +  where 100 = len([{'body': 'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas tota...tate dolores velit et doloremque molestiae', 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'userId': 1}, ...])\nE        +    where [{'body': 'quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas tota...tate dolores velit et doloremque molestiae', 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'userId': 1}, ...] = json()\nE        +      where json = <Response [200]>.json\nE        +  and   15 = int('15')\n\ntests/test_get_method.py:45: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1728984236264,"stop":1728984236264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1728984236264,"stop":1728984236264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_response","time":{"start":1728984236264,"stop":1728984236295,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"env","time":{"start":1728984236264,"stop":1728984236264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"total_posts","time":{"start":1728984236303,"stop":1728984236303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_get_method"},{"name":"host","value":"fv-az1690-14"},{"name":"thread","value":"2114-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_get_method"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"83eb2acd22b8508a.json","parameterValues":[]}